#!/bin/bash
readonly USER_HOME="/home/userhome"
readonly DEFAULT_UID='1000'

#######################################
# Restores the previous home directory if VERSION_X is set.
# Globals:
#   USER_HOME - The default home directory for users
#   VERSION_X - Version-specific flag for conditional execution
# Arguments:
#   1 - username: The name of the user whose home directory should be restored
#   2 - previous_home: Flag indicating if a previous home directory exists (boolean)
# Returns:
#   1 - If there is an error moving the home directory
#######################################
function restore_previous_home() {
  if [[ -n "${VERSION_X}" ]]; then
    local username=$1
    local previous_home=$2

    if [[ -n "${previous_home}" ]]; then
      mv "/home/${username}" "${USER_HOME}" || return 1
    fi
  fi
}

#######################################
# Creates a new user and sets up default groups, UID,
# and password. Restores the home directory if the process fails.
# Globals:
#   USER_HOME - The default home directory for users
#   VERSION_X - Version-specific flag for conditional execution
#   DEFAULT_UID - Represents the default user identifier (UID) of `1000`
# Arguments:
#   1 - username: The name for the new user to be created
# Returns:
#   1 - If there is an error in any of the steps (useradd, usermod, passwd)
#######################################
function create_user() {
  local default_groups='adm,cdrom,wheel,video,wsl-video'
  local username=$1
  local previous_home

  if [[ -n "${VERSION_X}" ]]; then

    if [[ -d "${USER_HOME}" ]]; then
      previous_home=1

      mv "${USER_HOME}" "/home/${username}" || return 1
    fi

  fi

  if ! (/usr/sbin/useradd -m -u "${DEFAULT_UID}" "${username}"); then
    restore_previous_home "$username" "${previous_home}"
    return 1
  fi

  if ! (/usr/sbin/usermod -aG "${default_groups}" "${username}"); then
    /usr/sbin/userdel "${username}"
    restore_previous_home "$username" "${previous_home}"
    return 1
  fi

  if ! (/usr/bin/passwd "${username}"); then
    /usr/sbin/userdel "${username}"
    restore_previous_home "$username" "${previous_home}"
    return 1
  fi
}

#######################################
# Main function to initialize the script
# Globals:
#   VERSION_X - Version environment variable
# Arguments:
#   None
#######################################
function main() {

  # Deletes /etc/resolv.conf only if it was not generated by WSL
  if [[ -f /etc/resolv.conf && $(grep -c "WSL" /etc/resolv.conf) == 0 ]]; then
    /bin/rm /etc/resolv.conf
  fi

  # If the default user is already created, we exit the script.
  if getent passwd ${DEFAULT_UID} > /dev/null; then
    return 0
  fi

  dbus-uuidgen --ensure

  echo 'Please create a default Linux user account. The username does not need to match your Windows username.'
  echo 'For more information visit: https://aka.ms/wslusers'

  while true; do
    # Prompt from the username
    local username
    read -rp 'Enter new Linux username: ' username

    create_user "${username}" && break
  done

  if [ "$(grep -c "\[user\]" /etc/wsl.conf)" -eq 0 ]; then
    echo -e "\n[user]\ndefault=${username}">>/etc/wsl.conf
  else
    sed -i "s/\(default=\)\(.*\)/\1${username}/" /etc/wsl.conf
  fi
}

main "$@"
